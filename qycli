#!/bin/bash
# qycli Installation Script.

# Check OS support
distr=`echo $(lsb_release -i | cut -d':' -f 2)`
osver=`echo $(lsb_release -c | cut -d':' -f 2)`
if ! [[ $distr == "Ubuntu" && $osver =~ ^(bionic|focal)$ ]]; then
	echo "$(tput setaf 1)"
	echo "****  This OS is not supported by qycli and could not work properly  ****"
	echo "$(tput sgr0)"
	read -p "Press [Enter] key to Continue or [Ctrl+C] to Cancel..."
fi

# Check for sudo/root privileges
if [[ $(whoami) != "root" ]]; then
	echo "$(tput setaf 1)Please run this script as root or using sudo.$(tput sgr0)"
	sudo rm qycli
	exit 1
fi

# Prevent "compulsive" re-installation, force the use of the 'update' command.
if [[ -f /opt/qycli/qycli.conf && $1 != "upd" && $2 != "-ver=alpha" ]]; then
	echo "$(tput setaf 2)qycli is already installed on your server!"
	echo "$(tput setaf 6)To update use the proper command.$(tput sgr0)"
	sudo rm qycli
	exit 0
elif [[ ! -f /opt/qycli/qycli.conf && $1 == "upd" ]]; then
	echo "$(tput setaf 1)qycli cannot be updated because it's not installed or not found.$(tput sgr0)"
	sudo rm qycli
	exit 0
fi

# Diplay menu to select type of server
if [[ $1 == "upd" ]]; then
	setup=0
	update="&update=true"
elif ! [[ $1 -ge 0 && $1 -le 3 && $1 =~ ^[0-9]+$ ]]; then
	echo "$(tput setaf 6)"
	echo "  1 - HTML Server"
	echo "  2 - PHP Server"
	echo "  3 - LEMP Server (Default)"
	echo "  0 - Maybe later..."
	echo ""
	read -p "$(tput setaf 2)Select the desired option to configure your server: $(tput sgr0)" setup
	echo ""
	setup=${setup:-3}
else
	setup=$1
fi


# Download and install qycli
if [[ $2 == "-ver="* ]]; then
	ver=$(echo "$2" | cut -d'=' -f 2 -s)
	# Skip stadistics counters for dev and testing (custom version stats).
	if [[ $(echo $ver | rev | cut -c-1) == "*" || $ver == "alpha" ]]; then
		ver=${ver//'*'}
		statskip="true"
	fi
	
	# Be sure we have a valid server response for the requested version
	code=$(wget --server-response --spider https://qrok.es/qycli?version=$ver 2>&1 | awk '/^  HTTP/{print $2}')
	code="${code##*$'\n'}" # Get the last code (redirections)

	if [[ $code == 200 ]]; then
		sudo wget --timeout=15 -t 1 -qrO $HOME/qycli.tar https://qrok.es/qycli?version=$ver
		[[ $ver == "beta" ]] && echo "$(tput setaf 1)[WARNING] You are installing a BETA version of qycli and it's not recommended for production enviroments.$(tput sgr0)"
	else
		echo "$(tput setaf 1)[ERROR] Version not found or not available! ($code) $(tput sgr0)"
		sudo rm qycli
		exit 1
	fi
else
	sudo wget --timeout=15 -t 1 --referer="https://qycli.com/?option=${setup}${update}" -qrO $HOME/qycli.tar https://qrok.es/wytar
fi

if [[ ! -s $HOME/qycli.tar ]]; then
	echo "$(tput setaf 1)[ERROR] Downloading qycli failed!$(tput sgr0)"
	sudo rm qycli
	exit 1
else
	echo "$(tput dim)Downloading... Successful!"
	echo "$(tput sgr0)"
fi
		
sudo mkdir -p /opt/qycli
sudo tar -xf $HOME/qycli.tar -C /opt/qycli
sudo mkdir -p /opt/qycli/templates/source
sudo find /opt/qycli -type d -exec chmod 755 {} \;
sudo find /opt/qycli -type f -exec chmod 644 {} \;
sudo chmod -f 744 /opt/qycli/lib/ex-*

sudo chmod 755 /opt/qycli/plugins/*
sudo mv /opt/qycli/plugins/* /usr/bin/

source /opt/qycli/lib/general

# Check for uninstalled qycli conf file
if [[ -f $HOME/.qycli-conf-restore_dont-remove ]]; then
	echo "${gre}Seems like qycli was installed previously, we will try to recover your old configuration!${end}"
	sudo tar -Pxf $HOME/.qycli-conf-restore_dont-remove -C /
	sudo rm -rf $HOME/.qycli-conf-restore_dont-remove
	sudo qycli -verify
	if [[ $? != 0 ]]; then
		sudo rm qycli
		app_purge
		exit 1
	fi
fi


# Check if new installation
if [[ -f /opt/qycli/qycli.conf ]]; then
	oldapp=$(conf_read app-version)
	oldver=$(conf_read server-version)
	newver=$svr_version
	echo "${gre}qycli Configuration file was found, so we will use it!${end}"
else
	new_install="true"
fi


# Write app version
qycliversion=$app_version
conf_write app-version $qycliversion
[[ $ver =~ ^(alpha|beta)$ ]] && conf_write branch $ver


# Stack installation & updates
[[ -n $oldver && ${newver//.} -gt ${oldver//.} ]] && source /opt/qycli/lib/update
[[ $setup -gt 0 && $setup -le 3 ]] && stack -nginx
[[ $setup -gt 1 && $setup -le 3 ]] && stack -php
[[ $setup == 3 ]] && stack -mysql


# Message Center
if [[ $new_install == "true" && $setup == 0 ]]; then
	echo "${blu}You have chosen the option '0', it means that you have to manually build your own stack."
	echo "But, don't worry! With qycli this is an easy task, just use the stack command, i.e. 'sudo stack -lemp'"
	echo "${gre}"
	echo "qycli has been successfully installed!!!"
fi

echo "${blu}"
echo "Successfully installed qycli based on qycli"
echo "${end}"


# Remove Installation File
sudo rm qycli
app_purge
